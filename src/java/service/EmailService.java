package service;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;
import jakarta.mail.*;
import jakarta.mail.internet.*;

/**
 * EmailService - D·ªãch v·ª• g·ª≠i email
 */
public class EmailService {
    
    private static Properties emailConfig;
    private static final String CONFIG_FILE = "config.properties";
    
    static {
        loadConfig();
    }
    
    /**
     * Load email configuration t·ª´ file properties
     */
    private static void loadConfig() {
        emailConfig = new Properties();
        try (InputStream input = EmailService.class.getClassLoader().getResourceAsStream(CONFIG_FILE)) {
            if (input == null) {
                System.out.println("Unable to find " + CONFIG_FILE);
                return;
            }
            emailConfig.load(input);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * T·∫°o email session
     */
    private static Session getEmailSession() {
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", emailConfig.getProperty("EMAIL_HOST"));
        props.put("mail.smtp.port", emailConfig.getProperty("EMAIL_PORT"));
        props.put("mail.smtp.ssl.trust", emailConfig.getProperty("EMAIL_HOST"));
        
        return Session.getInstance(props, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(
                    emailConfig.getProperty("EMAIL_USER"),
                    emailConfig.getProperty("EMAIL_PASS")
                );
            }
        });
    }
    
    /**
     * G·ª≠i email verification
     */
    public static boolean sendVerificationEmail(String toEmail, String userName, String token) {
        try {
            String appUrl = emailConfig.getProperty("APP_URL");
            String verificationLink = appUrl + "/verify-email?token=" + token;
            
            String subject = "X√°c th·ª±c t√†i kho·∫£n - Nh√† Thu·ªëc MS";
            String htmlContent = buildVerificationEmailHTML(userName, verificationLink);
            
            return sendEmail(toEmail, subject, htmlContent);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    /**
     * G·ª≠i email reset password
     */
    public static boolean sendPasswordResetEmail(String toEmail, String userName, String token) {
        try {
            String appUrl = emailConfig.getProperty("APP_URL");
            String resetLink = appUrl + "/reset-password?token=" + token;
            
            String subject = "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - Nh√† Thu·ªëc MS";
            String htmlContent = buildPasswordResetEmailHTML(userName, resetLink);
            
            return sendEmail(toEmail, subject, htmlContent);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    /**
     * G·ª≠i email (core method)
     */
    private static boolean sendEmail(String toEmail, String subject, String htmlContent) {
        try {
            Session session = getEmailSession();
            
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(
                emailConfig.getProperty("EMAIL_FROM"),
                emailConfig.getProperty("EMAIL_FROM_NAME")
            ));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject(subject);
            message.setContent(htmlContent, "text/html; charset=UTF-8");
            
            Transport.send(message);
            
            System.out.println("Email sent successfully to: " + toEmail);
            return true;
            
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    /**
     * Build HTML template cho email verification
     */
    private static String buildVerificationEmailHTML(String userName, String verificationLink) {
        return "<!DOCTYPE html>" +
            "<html>" +
            "<head>" +
            "<meta charset='UTF-8'>" +
            "<style>" +
            "body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }" +
            ".container { max-width: 600px; margin: 0 auto; padding: 20px; }" +
            ".header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }" +
            ".content { background: #f9f9f9; padding: 30px; }" +
            ".button { display: inline-block; padding: 15px 30px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }" +
            ".footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }" +
            "</style>" +
            "</head>" +
            "<body>" +
            "<div class='container'>" +
            "<div class='header'>" +
            "<h1>üè• Nh√† Thu·ªëc MS</h1>" +
            "</div>" +
            "<div class='content'>" +
            "<h2>Xin ch√†o " + userName + "!</h2>" +
            "<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i <strong>Nh√† Thu·ªëc MS</strong>.</p>" +
            "<p>ƒê·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω, vui l√≤ng x√°c th·ª±c ƒë·ªãa ch·ªâ email c·ªßa b·∫°n b·∫±ng c√°ch nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi:</p>" +
            "<div style='text-align: center;'>" +
            "<a href='" + verificationLink + "' class='button'>X√°c th·ª±c Email</a>" +
            "</div>" +
            "<p>Ho·∫∑c copy link sau v√†o tr√¨nh duy·ªát:</p>" +
            "<p style='background: #fff; padding: 10px; border: 1px solid #ddd; word-break: break-all;'>" + verificationLink + "</p>" +
            "<p><strong>L∆∞u √Ω:</strong> Link n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.</p>" +
            "<p>N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.</p>" +
            "</div>" +
            "<div class='footer'>" +
            "<p>¬© 2025 Nh√† Thu·ªëc MS. All rights reserved.</p>" +
            "</div>" +
            "</div>" +
            "</body>" +
            "</html>";
    }
    
    /**
     * Build HTML template cho password reset
     */
    private static String buildPasswordResetEmailHTML(String userName, String resetLink) {
        return "<!DOCTYPE html>" +
            "<html>" +
            "<head>" +
            "<meta charset='UTF-8'>" +
            "<style>" +
            "body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }" +
            ".container { max-width: 600px; margin: 0 auto; padding: 20px; }" +
            ".header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }" +
            ".content { background: #f9f9f9; padding: 30px; }" +
            ".button { display: inline-block; padding: 15px 30px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }" +
            ".warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 15px 0; }" +
            ".footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }" +
            "</style>" +
            "</head>" +
            "<body>" +
            "<div class='container'>" +
            "<div class='header'>" +
            "<h1>üîí ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>" +
            "</div>" +
            "<div class='content'>" +
            "<h2>Xin ch√†o " + userName + "!</h2>" +
            "<p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.</p>" +
            "<p>ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi:</p>" +
            "<div style='text-align: center;'>" +
            "<a href='" + resetLink + "' class='button'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>" +
            "</div>" +
            "<p>Ho·∫∑c copy link sau v√†o tr√¨nh duy·ªát:</p>" +
            "<p style='background: #fff; padding: 10px; border: 1px solid #ddd; word-break: break-all;'>" + resetLink + "</p>" +
            "<div class='warning'>" +
            "<strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong>" +
            "<ul>" +
            "<li>Link n√†y s·∫Ω h·∫øt h·∫°n sau <strong>1 gi·ªù</strong></li>" +
            "<li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>" +
            "<li>Kh√¥ng chia s·∫ª link n√†y v·ªõi b·∫•t k·ª≥ ai</li>" +
            "</ul>" +
            "</div>" +
            "</div>" +
            "<div class='footer'>" +
            "<p>¬© 2025 Nh√† Thu·ªëc MS. All rights reserved.</p>" +
            "</div>" +
            "</div>" +
            "</body>" +
            "</html>";
    }
}
